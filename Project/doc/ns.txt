ffmpeg -framerate 20 -i ./case_6/frame_%05d.png -vcodec libx264 -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" -crf 5 -r 25 -pix_fmt yuv420p out.mp4

dT / dt + u * grad(T)
d(T) / d(t L/U)  +  U/L u grad(T)  =  alpha / L^2 grad^2(T)
T = T0 + TH * (T1 - T0)

dTH/dt + u grad(TH) = 1 / (Pr RE) grad^2(TH)


1)  du/dt + u du/dx + v du/dy = -dp/dx - beta (T - T0) g + nu (d^2u/dx^2 + d^2u/dy^2)

        d(U u)/d(t L/U) + U u d(Uu)/d(Lx) + U v d(Uu)/d(Ly) = -d(UU p)/d(Lx) 
UU/L    du/dt + u du/dx + v du/dy = -dp/dx - beta (T1-T0) g1 L / UU TH + (1/Re) (d^2u/dx^2 + d^2u/dy^2)
        du/dt + u du/dx + v du/dy = -dp/dx - Gr / Re^2 TH + (1/Re) (d^2u/dx^2 + d^2u/dy^2)




------------------------------------------------------------------

Re = UL/nu                                                   -> 500
Pr = nu/alpha                                                ->   1
Gr = beta (T1-T0) g L^3 / nu^2 = beta (T1-T0) g (L/UU) Re^2  -> (10^7) 250k
   = beta (T1-T0) g Re^2 L/UU

x = x/L
y = y/L
u = u/U
t = t/(L/U)
p = p/(rho UU)
TH = (T - T0) / (T1 - T0)

1)  du/dt + u du/dx + v du/dy = -dp/dx                  + (1/Re) (d^2u/dx^2 + d^2u/dy^2)
2)  dv/dt + u dv/dx + v dv/dy = -dp/dy - Gr / Re^2 (0,-1) TH + (1/Re) (d^2v/dx^2 + d^2v/dy^2)
3)  dTH / dt + u dTH/dx + v dTH/dy = 1 / (Pr Re) (d^2TH/dx^2 + d^2TH/dy^2) + Ec / Re phi


phi = 2[ (du/dx)^2 + (dv/dy)^2] + (du/dy + dv/dx)^2


